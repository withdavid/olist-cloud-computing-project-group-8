apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-orders-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-orders
  template:
    metadata:
      labels:
        app: mysql-orders
    spec:
      containers:
        - name: mysql-orders
          image: mysql:latest
          env:
            - name: MYSQL_HOST
              value: "mysql_orders"
            - name: MYSQL_DATABASE
              value: "olist_orders"
            - name: MYSQL_USER
              value: "olist_myuser"
            - name: MYSQL_PASSWORD
              value: "olist_password"
            - name: MYSQL_ROOT_PASSWORD
              value: "root_password"
            - name: MYSQL_TCP_PORT
              value: "3309"
          ports:
            - containerPort: 3309
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
            - name: mysql-ms-orders-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-ms-orders-storage
          persistentVolumeClaim:
            claimName: mysql-orders-pd-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ms-orders-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ms-orders
  template:
    metadata:
      labels:
        app: ms-orders
    spec:
      containers:
        - name: ms-orders
          image: us-west1-docker.pkg.dev/olist-cloud/olist-containers/ms_orders_api:latest
          env:
            - name: MYSQL_HOST
              value: "mysql-orders"
            - name: MYSQL_DATABASE
              value: "olist_orders"
            - name: MYSQL_USER
              value: "olist_myuser"
            - name: MYSQL_PASSWORD
              value: "olist_password"
            - name: MYSQL_ROOT_PASSWORD
              value: "root_password"
            - name: MYSQL_TCP_PORT
              value: "3309"
          ports:
            - containerPort: 5000
            - containerPort: 50050
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /metrics
              port: 5000
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /metrics
              port: 5000
            initialDelaySeconds: 3
            periodSeconds: 3
